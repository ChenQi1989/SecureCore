source poky/oe-init-build-env build-secure-core

S="${BASH_SOURCE[0]}"
D=`dirname "$S"`
SECURE_CORE_ROOT="`cd "$D"/.. && pwd`"

cat <<EOF>>conf/local.conf

# SecureCore-specific settings
MACHINE_forcevariable = "qemux86-64"

INITRAMFS_IMAGE = "secure-core-image-initramfs"

VIRTUAL-RUNTIME_init_manager = "systemd"

DISTRO_FEATURES_NATIVE_append += "systemd ima tpm tpm2 efi-secure-boot luks"
DISTRO_FEATURES_append += "systemd ima tpm tpm2 efi-secure-boot luks modsign"

MACHINE_FEATURES_NATIVE_append += "efi"
MACHINE_FEATURES_append += "efi"

SECURE_CORE_IMAGE_EXTRA_INSTALL_append += "\
"

RPM_GPG_NAME ??= ""
RPM_GPG_PASSPHRASE ??= ""

DEBUG_FLAGS_forcevariable = ""

EOF

if [ -s "$SECURE_CORE_ROOT/extra-init-build-env" ]; then
    cat "$SECURE_CORE_ROOT/extra-init-build-env" >> conf/local.conf
fi

LAYERS="\
    meta-openembedded/meta-oe \
    meta-openembedded/meta-perl \
    meta-openembedded/meta-networking \
    meta-openembedded/meta-python \
    meta-secure-core/meta \
    meta-secure-core/meta-signing-key \
    meta-secure-core/meta-tpm \
    meta-secure-core/meta-tpm2 \
    meta-secure-core/meta-efi-secure-boot \
    meta-secure-core/meta-integrity \
    meta-secure-core/meta-encrypted-storage \
    meta-secure-core/meta-ids \
"

for layer in `echo -n $LAYERS | tac`; do
    if [ -e ../$layer ]; then
        sed -i \
            "s#^\(.*\)poky/meta-yocto-bsp\(.*\)#\1$layer \\\\\n\1poky/meta-yocto-bsp\2#" \
            conf/bblayers.conf
    fi
done

cat <<EOF>>conf/local.conf

INHERIT += "sign_rpm_ext"

EOF

touch .configured
